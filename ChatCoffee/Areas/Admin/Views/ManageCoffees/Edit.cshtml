@model ChatCoffee.Models.ModelsDefault.COFFEE
@using ChatCoffee.Models.ModelsDefault
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    List<ANH> listAnh = new List<ANH>();
    if (ViewBag.DSAnh != null)
    {
        listAnh = ViewBag.DSAnh;
    }
    ANH anh = new ANH();
}

@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"> <i class="fas fa-bars"></i> </a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/ManageCoffees" class="nav-link">Danh sách sản phẩm</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/ManageCoffees/Edit" class="nav-link">Chỉnh sửa sản phẩm</a>
        </li>
    </ul>
}

<section class="content">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title"> Thêm mới sản phẩm </h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "ManageCoffees", FormMethod.Post))
            {
                @Html.ValidationSummary(false)
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label>Mã sản phẩm</label>
                    @Html.EditorFor(model => model.MACF, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MACF, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Loại sản phẩm</label>
                    @Html.DropDownList("MALOAI", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MALOAI, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Thương hiệu</label>
                    @Html.DropDownList("MATH", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MATH, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Tên sản phẩm</label>
                    @Html.EditorFor(model => model.TENCF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TENCF, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Giá (VNĐ)</label>
                    @Html.EditorFor(model => model.GIA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GIA, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    <label>Số lượng</label>
                    @Html.EditorFor(model => model.SOLUONG, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SOLUONG, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <label>Khối Lượng (gam)</label>
                    @Html.EditorFor(model => model.KHOILUONG, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KHOILUONG, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <label>Lượt xem</label>
                    @Html.EditorFor(model => model.ViewCount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ViewCount, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Số lượng đã bán</label>
                    @Html.EditorFor(model => model.SLDABAN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.SLDABAN, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Xuất xứ</label>
                    @Html.EditorFor(model => model.XUATXU, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.XUATXU, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    <label>Hạn sử dụng (Tháng)</label>
                    @Html.EditorFor(model => model.HSD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HSD, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Dạng sản phẩm</label>
                    @Html.EditorFor(model => model.DANGCF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DANGCF, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Mô tả</label>
                    @Html.EditorFor(model => model.MOTA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MOTA, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Trạng thái</label>
                    <div class="form-group">

                        @Html.DropDownListFor(model => model.TRANGTHAI, new SelectList(Enum.GetValues(typeof(TrangThai))))
                    </div>
                    @Html.ValidationMessageFor(model => model.TRANGTHAI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-success">Xác nhận</button>
                </div>
            }
        </div>
        <div class="card-footer">
            <div class="form-group">
                <label>Danh sách ảnh</label>
                <div class="form-group">
                    @if (listAnh.Count > 0)
                    {
                        foreach (var item in listAnh)
                        {
                            using (Html.BeginForm("DeleteImage", "ManageCoffees", new { @id = item.MAANH }, FormMethod.Post))
                            {
                                
                                <img src="@item.LINKANH" style="width:100px; height:100px" />
                                <input type="submit" value="Xóa " class="btn-btn-success" />

                            }
                        }
                    }
                    else
                    {
                        <label > Chưa có ảnh</label >
                        <br />
                    }
                    @using (Html.BeginForm("AddImage", "ManageCoffees", new { @MACF = Model.MACF }, FormMethod.Post))
                    {

                        <input type="file" name="fileUpload" id="fileUpload" accept="coffees_imgs/*"
                               style="display:none;" />
                        <input type="button" id="btnUpload" value="Thêm ảnh" class="btn btn-success" />
                        <img src="@anh.LINKANH" id="pictureUpload" style="width:100px; height:100px"/>

                        <input type="submit" value="Chọn " class="btn btn-success" />
                    }

                </div>
            </div>
        </div>
    </div>

</section>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section upload
{
    <script>
        $(function () {
            $('#btnUpload').click(function () {
                $('#fileUpload').trigger('click');
            });
        });
        $('#fileUpload').change(function () {
            if (window.FormData !== undefined) {
                var fileUpload = $('#fileUpload').get(0);
                var files = fileUpload.files;
                var formData = new FormData();
                formData.append('file', files[0]);

                $.ajax(
                    {
                        type: 'POST',
                        url: '/ManageCoffees/ProcessUpload',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (urlImage) {

                            $('#pictureUpload').attr('src', urlImage);
                            $('#LINKANH').val(urlImage);
                        },
                        error: function (err) {
                            alert('Error ', err.statusText);
                        }
                    });
            }
        });
    </script>
}